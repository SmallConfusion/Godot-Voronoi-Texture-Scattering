[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://cmtxbdd37d2vu"]

[ext_resource type="Texture2D" uid="uid://duqntwi2t2pk6" path="res://addons/voronoi_scatter/example/texture.tres" id="1_vrkkp"]

[sub_resource type="Shader" id="Shader_tdbey"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.5.beta5's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

#define BASE_SCALE 10.0
#define VORONOI_SCALE 1.5
#define VORONOI_ROTATION PI * 2.0

#include \"res://addons/voronoi_scatter/voronoi.gdshaderinc\"

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	VORONOI_INIT
	vec2 base_uv = UV;

	vec4 albedo_tex = VORONOI_TEXTURE_SAMPLE(texture_albedo);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(VORONOI_TEXTURE_SAMPLE(texture_metallic), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(VORONOI_TEXTURE_SAMPLE(texture_roughness), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_tdbey")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("1_vrkkp")
shader_parameter/albedo_texture_size = Vector2i(512, 512)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
